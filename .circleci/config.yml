# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@4.7
  docker: circleci/docker@2.0.2
  kubernetes: circleci/kubernetes@0.3.0
  redhat-openshift: circleci/redhat-openshift@0.2.0

# Define custom jobs for this config
jobs:
  deploy-to-cluster:
    executor: redhat-openshift/default
    steps:
      - redhat-openshift/login-and-update-kubeconfig:
          insecure-skip-tls-verify: true
          openshift-platform-version: 4.x
          token: $OPENSHIFT_TOKEN
          server-address: $OPENSHIFT_SERVER
      - run:
          # https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-allow-pods-to-reference-images-from-secure-registries_using-image-pull-secrets
          command: >
            oc create secret docker-registry 
            --docker-server=$DOCKER_SERVER 
            --docker-username=$DOCKER_LOGIN 
            --docker-password=$DOCKER_PASSWORD 
            --docker-email=unused
            my-docker-registry-secret
          name: Create Docker secret
      - run:
          command: |
            cat \<<- EOF > deployment.yaml
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: nginx-deployment
            spec:
              selector:
                matchLabels:
                  app: nginx
              replicas: 2
              template:
                metadata:
                  labels:
                    app: nginx
                spec:
                  containers:
                  - name: nginx 
                    image: nginx:1.7.9 # Will need to be changed to test:latest, name/port updated
                    ports:
                    - containerPort: 80
            EOF
          name: Create example k8s deployment yaml file
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.yaml
          resource-name: deployment/nginx-deployment

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test-image-deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - node/test:
          # This is the node version to use for the `cimg/node` tag
          # Relevant tags can be found on the CircleCI Developer Hub
          # https://circleci.com/developer/images/image/cimg/node
          version: '16.10'
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
      
      - docker/publish:
          registry: $DOCKER_SERVER
          image: $DOCKER_REPO
          tag: $DOCKER_IMAGE_NAME,$CIRCLE_SHA1,latest 
          use-docker-credentials-store: false  # env variables should be used instead, named $DOCKER_LOGIN and $DOCKER_PASSWORD
          requires:
            - node/test # Only deploy once the build job has completed
          filters:
            branches:
              only: main # Only deploy on the main branch

      - deploy-to-cluster
          #requires:
          #  - docker/publish # Only deploy once the image has been published